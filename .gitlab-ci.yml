image: "$DOCKER_REGISTRY/$DOCKER_IMAGE_BUILD"

variables:
  DEBUG: "false"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

stages:
  - test
  - build
  - deploy
  - release

job_start:
  image: docker
  tags:
    - aphp
    - cicd
    - rsareth
  stage: .pre
  script:
    - echo "Start the build"
    - env | sort
    - mount

job_test_spark-csv:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-csv test
      
job_test_spark-dataframe:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-dataframe test

job_test_spark-hive:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-hive test

job_test_spark-meta:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-meta test

job_test_spark-postgres:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-postgres -DskipTests test

job_test_spark-quality:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-quality test

job_test_spark-query:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-query -DskipTests test

job_test_spark-sync:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: test
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
      - tags
  script:
    - mvn -pl spark-sync -DskipTests test

job_build:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: build
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  artifacts:
    expire_in: 1 week
    paths:
      - ./spark-{csv,dataframe,hive,meta,postgres,quality,query,sync}/target/*jar
  except:
    refs:
      - master
  script:
    - ./build.sh --package-artifact

job_deploy_artifact:
  dependencies:
    - job_build
  tags:
    - aphp
    - cicd
    - rsareth
  stage: deploy
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  except:
    refs:
      - master
  retry:
    max: 2
    when: script_failure
  script:
    - ./build.sh --deploy-artifact

job_release:
  dependencies:
    - job_build
  tags:
    - aphp
    - cicd
    - rsareth
  stage: release
  cache:
    key: "${CI_PROJECT_PATH}-${CI_JOB_NAME}"
    paths:
      - .m2/repository
  only:
    refs:
      - master
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^\[CICD\]/
  script:
    - ./build.sh --prepare-release

job_end:
  tags:
    - aphp
    - cicd
    - rsareth
  stage: .post
  script:
    - echo "End"
    - env | sort
